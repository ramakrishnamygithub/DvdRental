<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:dwr="http://www.directwebremoting.org/schema/spring-dwr"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
       http://www.directwebremoting.org/schema/spring-dwr http://www.directwebremoting.org/schema/spring-dwr-3.0.xsd">
  
  
   <dwr:configuration />   
   <dwr:annotation-scan base-package="com.dvdrental" scanDataTransferObject="true" scanRemoteProxy="true"/>
   
   <context:annotation-config/>
   <context:component-scan base-package="com.dvdrental.inventory"/>
   
   
   <bean class="org.springframework.jdbc.datasource.DriverManagerDataSource" name="dataSourceObj">
		<property name="driverClassName" value="org.postgresql.Driver"/>
		<property name="url" value="jdbc:postgresql://localhost/dvdrental"/>
		<property name="username" value="postgres"/>
		<property name="password" value="admin"/>
	</bean>
	<bean class="org.springframework.jdbc.core.JdbcTemplate" name="jdbctemplate">
		<property name="dataSource">
			<ref bean="dataSourceObj"/>
		</property>
	</bean>
	<!-- 
	<bean class="com.dvdrental.iventory.dao.impl.CountryDaoImpl" name="countryDaoImpl">
		<property name="jdbcTemplate">
			<ref bean="jdbctemplate"/>
		</property>
	
	</bean> -->
	
	
	<bean class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean" name="sessionFactory">
		<property name="dataSource" ref="dataSourceObj"/>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
			</props>
		</property>
		<property name="annotatedClasses">
			<list>
				
				<value>com.dvdrental.inventory.model.Preferences</value>
				<value>com.dvdrental.inventory.model.Country</value>
				<value>com.dvdrental.inventory.model.User</value>
				<value>com.dvdrental.inventory.model.City</value>
			</list>
		</property>
	</bean>
	
	<bean class="org.springframework.orm.hibernate3.HibernateTemplate" name="hbtemplate">
		<property name="sessionFactory" ref="sessionFactory"></property>
		
	</bean>
	
	
	<bean class="com.dvdrental.inventory.dao.impl.CountryDaoImpl" name="countryDaoImpl">
		<property name="hibernateTemplate">
			<ref bean="hbtemplate"/>
		</property>
		<property name="jdbcTemplate">
			<ref bean="jdbctemplate"/>
		</property>
		
	</bean>
	<bean class="com.dvdrental.inventory.dao.impl.CityDaoImpl" name="cityDaoImpl">
		<property name="hibernateTemplate">
			<ref bean="hbtemplate"/>
		</property>
		<property name="jdbcTemplate">
			<ref bean="jdbctemplate"/>
		</property>
		
	</bean>
	<bean class="com.dvdrental.inventory.dao.impl.UserDaoImpl" name="userDaoImpl">
		<property name="hibernateTemplate">
			<ref bean="hbtemplate"/>
		</property>
		<property name="jdbcTemplate">
			<ref bean="jdbctemplate"/>
		</property>
		
	</bean>
		<bean class="com.dvdrental.inventory.dao.impl.PreferencesDaoImpl" name="preferencesDaoImpl">
		<property name="hibernateTemplate">
			<ref bean="hbtemplate"/>
		</property>
		<property name="jdbcTemplate">
			<ref bean="jdbctemplate"/>
		</property>
		
	</bean>
	
      
</beans>